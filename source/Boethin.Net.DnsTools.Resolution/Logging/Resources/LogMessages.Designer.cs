/*
 * File: Boethin.Net.DnsTools.Resolution/Logging/Resources/LogMessages.Designer.cs
 *
 * This file is part of Boethin.Net.DnsTools, a DNS debugging library.
 * Copyright (C) 2013 Sebastian Boethin <boethin@xn--domain.net>
 * 
 * 
 * MIT License
 * 
 * Copyright (c) 2023 Sebastian Böthin
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

﻿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Boethin.Net.DnsTools.Resolution.Logging.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LogMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LogMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Boethin.Net.DnsTools.Resolution.Logging.Resources.LogMessages", typeof(LogMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOA found, but no other RRs in reply to &apos;ANY&apos; query..
        /// </summary>
        internal static string AnyRecordResolutionSucceeded {
            get {
                return ResourceManager.GetString("AnyRecordResolutionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Resouce Records were found in reply to &apos;ANY&apos; query..
        /// </summary>
        internal static string AnyRecordResolutionSucceeded2 {
            get {
                return ResourceManager.GetString("AnyRecordResolutionSucceeded2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name server &apos;{0}&apos; has been selected..
        /// </summary>
        internal static string AuthoritySelected {
            get {
                return ResourceManager.GetString("AuthoritySelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; is an alias for the canonical name &apos;{1}&apos;..
        /// </summary>
        internal static string CNameFound {
            get {
                return ResourceManager.GetString("CNameFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolver is not configured to follow the canonical name..
        /// </summary>
        internal static string CNameNoFollow {
            get {
                return ResourceManager.GetString("CNameNoFollow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuing resolution of &apos;{0}&apos; with &apos;{1}&apos; authority..
        /// </summary>
        internal static string ContinuingResultion {
            get {
                return ResourceManager.GetString("ContinuingResultion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Resource Record of type &apos;{0}&apos; was found..
        /// </summary>
        internal static string MissingRecords {
            get {
                return ResourceManager.GetString("MissingRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string NameNotExisting {
            get {
                return ResourceManager.GetString("NameNotExisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name server &apos;{0}&apos; has been resolved, continuing with &apos;{1}&apos;..
        /// </summary>
        internal static string NameServerResolved {
            get {
                return ResourceManager.GetString("NameServerResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negative Response: {0}..
        /// </summary>
        internal static string NegativeResponse {
            get {
                return ResourceManager.GetString("NegativeResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {2} authorities of &apos;{1}&apos; from &apos;{0}&apos;..
        /// </summary>
        internal static string NextAuthoritiesReceived {
            get {
                return ResourceManager.GetString("NextAuthoritiesReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name server does not support queries of type &apos;{0}&apos;..
        /// </summary>
        internal static string QueryNotImplemented {
            get {
                return ResourceManager.GetString("QueryNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Resouce Records of type &apos;{0}&apos; was found..
        /// </summary>
        internal static string RecordResolutionSucceeded {
            get {
                return ResourceManager.GetString("RecordResolutionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} Resouce Records of type &apos;{0}&apos; were found..
        /// </summary>
        internal static string RecordResolutionSucceeded2 {
            get {
                return ResourceManager.GetString("RecordResolutionSucceeded2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A truncated answer has been received, so the request needs to be repeated via TCP..
        /// </summary>
        internal static string RepeatingTruncatedAnswer {
            get {
                return ResourceManager.GetString("RepeatingTruncatedAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request took {0}ms..
        /// </summary>
        internal static string RequestDuration {
            get {
                return ResourceManager.GetString("RequestDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolution finished, took {0} steps..
        /// </summary>
        internal static string ResolutionFinished {
            get {
                return ResourceManager.GetString("ResolutionFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name server &apos;{0}&apos; needs to be resolved first..
        /// </summary>
        internal static string ResolvingNameServer {
            get {
                return ResourceManager.GetString("ResolvingNameServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource Record &apos;{1}&apos; of type {0} found..
        /// </summary>
        internal static string ResourceRecordFound {
            get {
                return ResourceManager.GetString("ResourceRecordFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv4 address &apos;{0}&apos; found: {1}..
        /// </summary>
        internal static string ResourceRecordFoundA {
            get {
                return ResourceManager.GetString("ResourceRecordFoundA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6 address &apos;{0}&apos; found: {1}..
        /// </summary>
        internal static string ResourceRecordFoundAAAA {
            get {
                return ResourceManager.GetString("ResourceRecordFoundAAAA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name server &apos;{0}&apos; found..
        /// </summary>
        internal static string ResourceRecordFoundNS {
            get {
                return ResourceManager.GetString("ResourceRecordFoundNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointer &apos;{0}&apos; found: &apos;{1}&apos;..
        /// </summary>
        internal static string ResourceRecordFoundPTR {
            get {
                return ResourceManager.GetString("ResourceRecordFoundPTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid response: {0}.
        /// </summary>
        internal static string ResponseInvalid {
            get {
                return ResourceManager.GetString("ResponseInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending DNS request using {1} to &apos;{0}&apos;..
        /// </summary>
        internal static string SendingRequest {
            get {
                return ResourceManager.GetString("SendingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name server was unable to process this query due to a problem with the name server..
        /// </summary>
        internal static string ServerFailure {
            get {
                return ResourceManager.GetString("ServerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name server refuses to perform the specified operation for policy easons..
        /// </summary>
        internal static string ServerRefused {
            get {
                return ResourceManager.GetString("ServerRefused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name &apos;{0}&apos; has been successfully resolved to &apos;{1}&apos;..
        /// </summary>
        internal static string SingleAddressResolutionSucceeded {
            get {
                return ResourceManager.GetString("SingleAddressResolutionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointer resolution succeeded with the name &apos;{0}&apos;..
        /// </summary>
        internal static string SinglePointerResolutionSucceeded {
            get {
                return ResourceManager.GetString("SinglePointerResolutionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting resolution of &apos;{0}&apos; with a &apos;{1}&apos; authority..
        /// </summary>
        internal static string StartingResultion {
            get {
                return ResourceManager.GetString("StartingResultion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting resolution of &apos;{0}&apos; with a root name server..
        /// </summary>
        internal static string StartingResultionRoot {
            get {
                return ResourceManager.GetString("StartingResultionRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected RCODE value {0} &apos;{1}&apos; received..
        /// </summary>
        internal static string UnexpectedRCode {
            get {
                return ResourceManager.GetString("UnexpectedRCode", resourceCulture);
            }
        }
    }
}
